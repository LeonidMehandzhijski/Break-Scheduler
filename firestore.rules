rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Agents collection - read by anyone, write by authenticated users
    match /agents/{agentId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.auth != null;
      allow delete: if false; // Prevent deletion, use soft delete if needed
      
      // Validate agent data
      match /{document=**} {
        allow read: if true;
        allow write: if request.auth != null && 
          request.resource.data.keys().hasAll(['name', 'status']) &&
          request.resource.data.name is string &&
          request.resource.data.status is string &&
          request.resource.data.status in ['available', 'onBreak', 'unavailable'];
      }
    }

    // Schedules collection - read by anyone, write by authenticated users
    match /schedules/{date} {
      allow read: if true;
      allow write: if request.auth != null;
      
      match /slots/{slotId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update: if request.auth != null;
        allow delete: if false;
        
        // Validate slot data
        match /{document=**} {
          allow read: if true;
          allow write: if request.auth != null &&
            request.resource.data.keys().hasAll(['name', 'startTime', 'endTime', 'agentId', 'status', 'breakType']) &&
            request.resource.data.status in ['scheduled', 'active', 'done', 'available'];
        }
      }
    }

    // Break definitions - read by anyone, write by admin only
    match /breakDefinitions/{breakId} {
      allow read: if true;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/admins/$(request.auth.uid)).exists;
      
      match /{document=**} {
        allow read: if true;
        allow write: if request.auth != null && 
          get(/databases/$(database)/documents/admins/$(request.auth.uid)).exists;
      }
    }
    
    // Admin users
    match /admins/{userId} {
      allow read: if request.auth != null;
      allow write: if false; // Manage admins through Firebase Console or Cloud Functions
    }
  }
}
